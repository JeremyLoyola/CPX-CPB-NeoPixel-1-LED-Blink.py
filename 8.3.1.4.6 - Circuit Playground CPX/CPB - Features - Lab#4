import time
import board
import neopixel
import math

# Function to generate rainbow colors
def wheel(pos):
    # Input a value 0 to 255 to get a color value.
    # The colours are a transition r - g - b - back to r.
    if pos < 0 or pos > 255:
        r, g, b = 0, 0, 0
    elif pos < 85:
        r = int(pos * 3)
        g = int(255 - pos * 3)
        b = 0
    elif pos < 170:
        pos -= 85
        r = int(255 - pos * 3)
        g = 0
        b = int(pos * 3)
    else:
        pos -= 170
        r = 0
        g = int(pos * 3)
        b = int(255 - pos * 3)
    return (r, g, b)

# Calls the CircuitPython neopixel library, specifies the default board 
# pins for the NeoPixels, and the number of neopixels to access. Returns a 
# list 'pixels' of indexable neopixels
pixels = neopixel.NeoPixel(board.NEOPIXEL, 10)

while True:
    # Iterate over each NeoPixel and set its color based on the rainbow effect
    for i in range(len(pixels)):
        color = wheel(int((i * 256 / len(pixels)) + time.monotonic() * 32) & 255)
        pixels[i] = color
    time.sleep(0.05)  # Adjust the delay to change the speed of the effect
